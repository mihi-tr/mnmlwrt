#!/usr/bin/env python2
from Tkinter import *
import sys
import tkFileDialog
import hashlib
import tkMessageBox
import os


class MnmlWrtr:
    def __init__(self, root, file=None):
        self.root = root
        self.root.config(background="#FFFFFF")
        root.wm_attributes(("-fullscreen"))
        g = root.winfo_screenwidth(), root.winfo_screenheight()
        root.geometry("%dx%d+0+0" % g)
        root.bind("<Control-q>", lambda e: self.quit())
        root.bind("<Control-o>", lambda e: self.open_dialog())
        root.bind("<Control-s>", lambda e: self.save())
        root.bind("<Control-n>", lambda e: self.new())
        self.textinput = Text(root,
                              wrap=WORD,
                              width=60,
                              height=20,
                              font=("Sans", "16"),
                              relief=FLAT,
                              borderwidth=0
                              )
        self.textinput.focus_set()
        self.textinput.pack(pady=100)
        self.signature = self.getsignature()
        self.file = file
        if self.file:
            self.open()
        else:
            self.new()

    def set_title(self):
        if self.file:
            t = os.path.basename(self.file)
        else:
            t = "New Document"
        self.root.title("mnmlwrt - %s" % t)

    def open_dialog(self):
        if self.haschanged():
            a = self.asksave()
            if not a:
                return None
        file = tkFileDialog.askopenfilename()
        if file:
            self.file = file
            self.open()

    def open(self):
        f = open(self.file, "r")
        c = "".join(f.readlines())
        f.close()
        self.set_title()
        self.textinput.delete(1.0, END)
        self.textinput.insert(END, c)
        self.signature = self.getsignature()

    def new(self):
        if self.haschanged():
            a = self.asksave()
            if not a:
                return None
        self.file = None
        self.textinput.delete(1.0, END)
        self.set_title()
        self.signature = self.getsignature()

    def quit(self):
        if self.haschanged():
            a = self.asksave()
            if not a:
                return None
        self.root.quit()

    def save(self):
        if not self.file:
            file = tkFileDialog.asksaveasfilename(
                title="save as...", initialfile="text.txt")
            if not file:
                return None
            else:
                self.file = file
        self.set_title()
        if self.haschanged():
            f = open(self.file, "w")
            f.write(self.content())
            f.close()
            self.signature = self.getsignature()

    def content(self):
        return self.textinput.get(1.0, END).encode("utf-8")

    def getsignature(self):
        return hashlib.md5(self.content()).digest()

    def haschanged(self):
        return self.signature != self.getsignature()

    def asksave(self):
        save = tkMessageBox.askyesnocancel(
            message="You have unsaved edits, save now?")
        if save:
            self.save()
        else:
            return False
        return True

if __name__ == "__main__":
    file = None
    if len(sys.argv) > 1:
        file = sys.argv[1]
    mw = MnmlWrtr(Tk(), file)
    mw.root.mainloop()
